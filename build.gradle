/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'application'
    id 'com.mshri.multiproject.java-application-conventions'
    // id 'distribution'
}

group 'com.mshri'
version '1.0.0'

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // Logger
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'

    // Email
    compile group: 'com.sun.mail', name: 'javax.mail', version: '1.6.2'

    implementation 'org.apache.commons:commons-text'
    // implementation project(':utilities')
}

processResources {
    def env = (project.hasProperty('env') ? project.env : 'local').toLowerCase()

    if(env.equals('local')){
        include "**/config.properties"
    } else if(env.equals('auto')){
        include "**/application_${profile}.properties"
    } else if(env.equals('dev')){
        include "C:\\Users\\mshri\\Desktop\\gradle-multiproject-example\\extra\\dev.properties"
    } else if(env.equals('prod')){
        include "/C/Users/mshri/Desktop/gradle-multiproject-example/extra/prod.properties"
    } else if(env.equals('dist')){
        include "/C/Users/mshri/Desktop/gradle-multiproject-example/build/distributions/gradle-multiproject-example-1.0.0/config/dist.properties"
    }

    rename {
        'config.properties'
    }
}

startScripts{
    mainClassName = "com.mshri.multiproject.fruit.Apple"
    applicationName = 'fruit'
}

task createFlowerApp(type: CreateStartScripts) {
    mainClassName = "com.mshri.multiproject.flower.Rose"
    applicationName = 'flower'
    outputDir = startScripts.outputDir
    classpath = startScripts.classpath
}

task createVegAppWithoutArgs(type: CreateStartScripts) {
    mainClassName = "com.mshri.multiproject.veg.Potato"
    applicationName = 'veg-without-args'
    outputDir = startScripts.outputDir
    classpath = startScripts.classpath
}

task createVegAppWithArgs(type: CreateStartScripts) {
    mainClassName = "com.mshri.multiproject.veg.Potato"
    applicationName = 'veg-with-args'
    outputDir = startScripts.outputDir
    classpath = startScripts.classpath

    createVegAppWithArgs{
        doLast {
            unixScript.text = unixScript.text.replace('exec "$JAVACMD" "$@"', 'exec "$JAVACMD" "$@" "Red" "Green" "Blue"')

            windowsScript.text = windowsScript.text.replace('"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %VEG_WITH_ARGS_OPTS%  -classpath "%CLASSPATH%" com.mshri.multiproject.veg.Potato %*', '"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %VEG_WITH_ARGS_OPTS%  -classpath "%CLASSPATH%" com.mshri.multiproject.veg.Potato %* "Purple" "Orange"')
        }
    }
}

applicationDistribution.into("bin") {
    duplicatesStrategy= DuplicatesStrategy.EXCLUDE
    // from(createFruitApp)
    from(createFlowerApp)
    from(createVegAppWithArgs)
    from(createVegAppWithoutArgs)
    fileMode = 0755
}

// application {
//     // Define the main class for the application.
//     mainClass = 'com.mshri.multiproject.fruit.Apple'
// }

// print project(':common').buildDir
